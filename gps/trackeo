
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 30 00:47:57 2019

@author: braso
"""
import cv2
import glob
import numpy as np
from numpy import savetxt
import matplotlib.pyplot as plt
import pandas as pd

# %%
path 	= '/home/nicolascuedo/Escritorio/TAMIU_Octubre/SCRIPS/gps/'

dt_frames=glob.glob(path+'CSV/*.csv')
videos=glob.glob(path+'VIDEOS/*.MP4')
#
#capFile = 'DJI_0217.MP4'
#stFile  = 'DJI_0217.SRT'
##logFile = 'DJIFlightRecord_2019-09-04_[11-03-57]-TxtLogToCsv.csv'
#
#fil= open(path+stFile)
#subt=fil.read().split('\n\n')
#
##df_log = pd.read_csv(path+logFile,encoding='latin-1')
##df_log['CUSTOM.updateTime'] = pd.to_datetime(df_log['CUSTOM.updateTime'])+pd.offsets.Hour(-3)
#
#
#df_subt = pd.DataFrame(columns = ['frameNumber','dateTime','lat','lon'])
#
#for i in range(len(subt)):
#	l 			= subt[i].split('[')
#	if l[0] != '':
#		l0sp 		= l[0].split('\n')
#		
#		datetime 	= ','.join(l0sp[-2].split(',')[:-1])
#		frNum 		= np.int32(l0sp[2].split(':')[1].split(',')[0])
#		la 			= l[-2].replace(']','').replace(' ','').split(':')[-1]
#		lo 			= l[-1].replace(']','').replace(' ','').split(':')[-1].replace('</font>','')
#		df_subt = df_subt.append({'frameNumber':frNum,
#						 'dateTime':pd.to_datetime(datetime),
#						 'lat':np.float(la),
#						 'lon':np.float(lo)},ignore_index=True)


# %%
# Print de las coordenadas en el mundo de un punto de interes en la imagen

A=np.load('tl.npy')
img=cv2.imread("/home/nicolascuedo/Escritorio/TAMIU_Octubre/SCRIPS/gps/fauba_edit.jpg", cv2.IMREAD_GRAYSCALE)
plt.figure('Select interest point ')
plt.imshow(img,'gray')

print('Select interest point:\t\n',end=' ')
cy1,cx1=np.array(np.round(plt.ginput()[0]),dtype=np.int32)
vec=np.array([[cx1],[cy1],[cx1*cy1],[1]])

Coord_Mundo=np.dot(A,vec)
X_mundo=Coord_Mundo[0][0]
Y_mundo=Coord_Mundo[1][0]

print(' Latitude:', Coord_Mundo[0][0])
print(' Longitude:', Coord_Mundo[1][0])

# %% Referenciar el punto de interes a un Frame del video para buscar la foto ampliada
framesInterest =[]
num = 0

dt_frames 	= np.sort(dt_frames)
videos  	= np.sort(videos)
graficoGPS=False
if graficoGPS:
	for dff in dt_frames:
		df_subt = pd.read_csv(dff)
	
		ll = df_subt[['lat','lon']].valuesdt_frames[5][58:len(dt_frames[5])]
		plt.plot(ll.T[0],ll.T[1],'+')



for dff,vidf in zip(dt_frames,videos):
	
	print(num, ' de ', len(dt_frames)-1)
	print(dt_frames[num][58:len(dt_frames[num])])
	
	df_subt = pd.read_csv(dff)

	puntosLatLon = (df_subt[['lat','lon']])
	puntosLatLon.round(decimals=6)

	Dif = puntosLatLon - (Coord_Mundo[0],Coord_Mundo[1])
	#Dif.round(6)
# minIndex es el frame del video donde se encuentra la imagen a buscar
	tol=1e-5
	index=np.argsort(Dif.abs().values.sum(1))
	latlon=np.sort(Dif.abs().values.sum(1))
	indexInt=index[latlon<tol]
	if(indexInt.size != 0):
		indexInt=np.random.choice(indexInt,20)
	#minIndex = Dif.abs().sum(1).idxmin()
	
	vidcap = cv2.VideoCapture(vidf)
	#Extraer el frame del video
	success,image = vidcap.read()
	f=[]
	for i in indexInt:		
		print('Searching : ',i)
		if (vidcap.set(cv2.CAP_PROP_POS_FRAMES,i)):
			ret, frame = vidcap.read()
			f.append(frame)
	vidcap.release()

	framesInterest.append(f)
	num+=1


# %% For show images

for lista in framesInterest:
	for frame in lista:
		print('Reading frames')
		if len(frame):
			cv2.imshow('Frames',cv2.pyrDown(cv2.pyrDown(frame)))
			if cv2.waitKey(0)==ord('q'):
				break

cv2.destroyAllWindows()
#plt.imsave("/home/nicolascuedo/Escritorio/TAMIU_Octubre/SCRIPS/gps/Controlcrecimiento/P{}.png".format(all),frame)
#FrameInteres=vidcap.set(cv2.CAP_PROP_POS_FRAMES,minIndex)

# %% To saving images

cont=0
for lista in framesInterest:
	for frame in lista:
		print('Saving frames')
		if len(frame):
			plt.imsave("/home/nicolascuedo/Escritorio/TAMIU_Octubre/SCRIPS/gps/Controlcrecimiento/P{}.png".format(cont),frame[:,:,::-1])
		cont+=1
		